{"version":3,"sources":["Components/Header.js","api.js","Components/Section.js","Components/Loader.js","Components/Error.js","Components/Rating.js","assets/noPosterSmall.png","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["SHeader","styled","header","List","ul","Items","li","props","current","SLink","Link","withRouter","pathname","location","to","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","color","Error","text","RatingImg","SRating","rating","Img","bgImg","Rating","ImgContainer","Year","Poster","imageUrl","year","isMovie","noPoster","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","length","map","movie","poster_path","vote_average","release_date","slice","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","startSearch","target","BackDropImg","Content","Details","Duration","Genre","RatingBox","Summary","Season","Episode","DetailPresenter","result","console","log","backdrop_path","genreName","genres","genre","push","href","homepage","runtime","join","overview","episode_run_time","number_of_seasons","number_of_episodes","DetailContainer","includes","match","history","parsedId","Number","isNaN","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1077cbf5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 60px;\r\n  padding: 0px 20px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10000;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Items = styled.li`\r\n  margin-right: 5px;\r\n  width: 50px;\r\n  height: 60px;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 60px;\r\n`;\r\nconst Header = (props) => {\r\n  const {\r\n    location: { pathname },\r\n  } = props;\r\n  return (\r\n    <SHeader>\r\n      <List>\r\n        <Items current={pathname === \"/\"}>\r\n          <SLink to=\"/\">Movies</SLink>\r\n        </Items>\r\n        <Items current={pathname === \"/tv\"}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Items>\r\n        <Items current={pathname === \"/search\"}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Items>\r\n      </List>\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"20d9b6a5730b301e62a8a08731c1ab85\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: term,\r\n        //if not working => use encodeURIcomponent()\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: term,\r\n        //if not working => use encodeURIcomponent()\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  &:not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 30px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Error = ({ text, color }) => (\r\n  <Container>\r\n    <Text text={text} color={color}>\r\n      {text}\r\n    </Text>\r\n  </Container>\r\n);\r\n\r\nError.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RatingImg = styled.span`\r\n  font-size: 11px;\r\n  letter-spacing: -2px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nconst SRating = ({ rating }) => {\r\n  if (rating < 1) {\r\n    return <RatingImg rating={rating}>🌑🌑🌑🌑🌑</RatingImg>;\r\n  } else if (rating < 2) {\r\n    return <RatingImg rating={rating}>🌗🌑🌑🌑🌑</RatingImg>;\r\n  } else if (rating < 3) {\r\n    return <RatingImg rating={rating}>🌕🌑🌑🌑🌑</RatingImg>;\r\n  } else if (rating < 4) {\r\n    return <RatingImg rating={rating}>🌕🌗🌑🌑🌑</RatingImg>;\r\n  } else if (rating < 5) {\r\n    return <RatingImg rating={rating}>🌕🌕🌑🌑🌑</RatingImg>;\r\n  } else if (rating < 6) {\r\n    return <RatingImg rating={rating}>🌕🌕🌗🌑🌑</RatingImg>;\r\n  } else if (rating < 7) {\r\n    return <RatingImg rating={rating}>🌕🌕🌕🌑🌑</RatingImg>;\r\n  } else if (rating < 8) {\r\n    return <RatingImg rating={rating}>🌕🌕🌕🌗🌑</RatingImg>;\r\n  } else if (rating < 9) {\r\n    return <RatingImg rating={rating}>🌕🌕🌕🌕🌑</RatingImg>;\r\n  } else if (rating < 10) {\r\n    return <RatingImg rating={rating}>🌕🌕🌕🌕🌗</RatingImg>;\r\n  } else {\r\n    return <RatingImg rating={rating}>🌕🌕🌕🌕🌕</RatingImg>;\r\n  }\r\n};\r\n\r\nSRating.propTypes = {\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default SRating;\r\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport SRating from \"./Rating\";\r\nimport noPoster from \"assets/noPosterSmall.png\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Img = styled.div`\r\n  background-image: url(${(props) => props.bgImg});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s ease-in-out; ;;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  width: 100%;\r\n  text-align: center;\r\n  transform: translateY(-18px);\r\n  font-size: 12px;\r\n  opacity: 0;\r\n  transition: opacity 0.1s ease-in-out;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  position: relative;\r\n  margin-bottom: 5px;\r\n  &:hover {\r\n    ${Img} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Year = styled.div`\r\n  color: #95a5a6;\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, rating, title, year, isMovie }) => {\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n      <Container>\r\n        <ImgContainer>\r\n          <Img\r\n            bgImg={\r\n              imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : noPoster\r\n            }\r\n          />\r\n          <Rating>\r\n            <SRating rating={rating}></SRating>\r\n            {rating}/10\r\n          </Rating>\r\n        </ImgContainer>\r\n        <Title>{title}</Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | Popcorn Time</title>\r\n      </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section\r\n          title=\"Now Playing\"\r\n          children={nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.title}\r\n              year={movie.release_date.slice(0, 4)}\r\n              isMovie={true}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section\r\n          title=\"Upcomings\"\r\n          children={upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.title}\r\n              year={movie.release_date.slice(0, 4)}\r\n              isMovie={true}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section\r\n          title=\"Popular\"\r\n          children={popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              title={movie.title}\r\n              year={movie.release_date.slice(0, 4)}\r\n              isMovie={true}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}\r\n      {error && <Error color=\"#e74c3c\" text={error}></Error>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Couldn't get Movies\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => {\r\n  return loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV Shows | Popcorn Time</title>\r\n      </Helmet>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section\r\n          title=\"Top Rated Series\"\r\n          children={topRated.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              title={tv.name}\r\n              year={tv.first_air_date.slice(0, 4)}\r\n              isMovie={false}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section\r\n          title=\"Airing Now\"\r\n          children={airingToday.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              title={tv.name}\r\n              year={tv.first_air_date.slice(0, 4)}\r\n              isMovie={false}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}{\" \"}\r\n      {popular && popular.length > 0 && (\r\n        <Section\r\n          title=\"Popular\"\r\n          children={popular.map((tv) => (\r\n            <Poster\r\n              key={tv.id}\r\n              id={tv.id}\r\n              imageUrl={tv.poster_path}\r\n              rating={tv.vote_average}\r\n              title={tv.name}\r\n              year={tv.first_air_date.slice(0, 4)}\r\n              isMovie={false}\r\n            ></Poster>\r\n          ))}\r\n        ></Section>\r\n      )}\r\n      {error && <Error color=\"#e74c3c\" text={error}></Error>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Couldn't get TV series\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Error from \"Components/Error\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  term,\r\n  handleSubmit,\r\n  updateTerm,\r\n  error,\r\n  loading,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Popcorn Time</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movie/TV shows...\"\r\n          value={term}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults &&\r\n            (movieResults.length === 0 ? (\r\n              <Error\r\n                text={`No Movies found for \"${term}\"`}\r\n                color=\"#95a5a6\"\r\n              ></Error>\r\n            ) : (\r\n              <Section\r\n                title=\"Searched Movies\"\r\n                children={movieResults.map((movie) => (\r\n                  <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageUrl={movie.poster_path}\r\n                    rating={movie.vote_average}\r\n                    title={movie.title}\r\n                    year={movie.release_date.slice(0, 4)}\r\n                    isMovie={true}\r\n                  ></Poster>\r\n                ))}\r\n              ></Section>\r\n            ))}\r\n          {tvResults &&\r\n            (tvResults.length === 0 ? (\r\n              <Error\r\n                text={`No TV Shows found for \"${term}\"`}\r\n                color=\"#95a5a6\"\r\n              ></Error>\r\n            ) : (\r\n              <Section\r\n                title=\"Searched TV Shows\"\r\n                children={tvResults.map((tv) => (\r\n                  <Poster\r\n                    key={tv.id}\r\n                    id={tv.id}\r\n                    imageUrl={tv.poster_path}\r\n                    rating={tv.vote_average}\r\n                    title={tv.name}\r\n                    year={tv.first_air_date.slice(0, 4)}\r\n                    isMovie={false}\r\n                  ></Poster>\r\n                ))}\r\n              ></Section>\r\n            ))}\r\n          {error && <Error color=\"#e74c3c\" text={error}></Error>}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  term: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    term: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { term } = this.state;\r\n    if (term !== \"\") {\r\n      this.startSearch(term);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ term: value });\r\n  };\r\n\r\n  startSearch = async (term) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(term);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(term);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Couldn't find anything\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, term, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        term={term}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport noPoster from \"assets/noPosterSmall.png\";\r\nimport SRating from \"Components/Rating\";\r\nimport Helmet from \"react-helmet\";\r\nimport Error from \"Components/Error\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vh - 60px);\r\n`;\r\n\r\nconst BackDropImg = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImg});\r\n  background-position: center center;\r\n  background-size: 100% 100%;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  a {\r\n    width: 30%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Poster = styled.div`\r\n  background-image: url(${(props) => props.Img});\r\n  background-position: center center;\r\n  background-size: 100% 100%;\r\n  border-radius: 5px;\r\n  height: 100%;\r\n  width: 100%;\r\n  box-shadow: 5px 5px 10px 1px rgba(0, 0, 0, 0.5);\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Details = styled.div`\r\n  width: 70%;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  padding-left: 20px;\r\n`;\r\nconst Title = styled.div`\r\n  font-size: 5em;\r\n  margin-bottom: 20px;\r\n`;\r\nconst Year = styled.span`\r\n  margin-right: 20px;\r\n`;\r\nconst Duration = styled.span`\r\n  margin: 0px 20px;\r\n`;\r\nconst Genre = styled.span`\r\n  margin: 0px 20px;\r\n`;\r\nconst RatingBox = styled.span`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst Summary = styled.div`\r\n  line-height: 25px;\r\n  margin-top: 20px;\r\n  text-align: justify;\r\n`;\r\n\r\nconst Season = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\nconst Episode = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading, isMovie }) => {\r\n  console.log(result);\r\n  const { backdrop_path, poster_path } = result;\r\n  const genreName = [];\r\n  result.genres.map((genre) => genreName.push(genre.name));\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{isMovie ? result.title : result.name}</title>\r\n      </Helmet>\r\n      <BackDropImg\r\n        bgImg={`https://image.tmdb.org/t/p/original${backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <a href={result.homepage}>\r\n          <Poster\r\n            Img={\r\n              poster_path\r\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\r\n                : noPoster\r\n            }\r\n          />\r\n        </a>\r\n        <Details>\r\n          {isMovie ? (\r\n            <>\r\n              <Title>{result.title}</Title>\r\n              <Year>{result.release_date.slice(0, 4)}</Year>·\r\n              <Duration>{`${result.runtime} min`}</Duration>·\r\n              <Genre>{genreName.join(\" / \")}</Genre>·\r\n              <RatingBox>\r\n                <SRating rating={result.vote_average}></SRating>\r\n              </RatingBox>\r\n              <Summary>{result.overview}</Summary>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Title>{result.name}</Title>\r\n              <Year>{result.first_air_date.slice(0, 4)}</Year>·\r\n              <Duration>{result.episode_run_time[0]}</Duration>·\r\n              <Genre>{genreName.join(\" / \")}</Genre>·\r\n              <RatingBox>\r\n                <SRating rating={result.vote_average}></SRating>\r\n              </RatingBox>\r\n              <Season>{`Season : ${result.number_of_seasons}`}</Season>\r\n              <Episode>{`Episodes : ${result.number_of_episodes}`}</Episode>\r\n              <Summary>{result.overview}</Summary>\r\n            </>\r\n          )}\r\n        </Details>\r\n      </Content>\r\n      {error && <Error color=\"#e74c3c\" text={error}></Error>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport Loader from \"Components/Loader\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nclass DetailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n\r\n    const parsedId = Number(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    console.log(parsedId);\r\n    try {\r\n      let result = null;\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.tvDetail(parsedId));\r\n      }\r\n      this.setState({\r\n        result,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Couldn't find Matching\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, isMovie } = this.state;\r\n    return loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        isMovie={isMovie}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset}\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 14px;\r\n        background-color: rgba(20, 20,20, 1);\r\n        padding-top: 60px;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router />\n        <GlobalStyles />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}